{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>These instructions help you set up a CKAN server. For more information about CKAN, see the CKAN documentation and CKAN website.</p> <ul> <li>Installation</li> <li>Getting started</li> </ul>"},{"location":"getting_started/","title":"Getting started","text":"<p>Once you\u2019ve finished installing CKAN, this section will walk you through getting started with your new CKAN website, including creating a CKAN sysadmin user, some test data, and the basics of configuring your CKAN site.</p>"},{"location":"getting_started/#activate-the-virtual-environment","title":"Activate the virtual environment","text":"<p>If you\u2019re not already in your CKAN virtual environment, activate it now.</p> <pre><code>. /usr/lib/ckan/default/bin/activate\n</code></pre>"},{"location":"getting_started/#create-a-sysadmin-user","title":"Create a sysadmin user","text":"<p>The first thing you\u2019ll need to do is create a sysadmin user. This user will be able to log in to the CKAN web interface and perform administrative tasks.</p> <pre><code>cd /usr/lib/ckan/default/src/ckan\n</code></pre> <p>You have to create your first CKAN sysadmin user from the command line. For example, to create a new user called <code>seanh</code> and make him a sysadmin:</p> <pre><code>ckan -c /etc/ckan/default/ckan.ini sysadmin add seanh email=seanh@localhost name=seanh\n</code></pre> <p>For a list of other command line commands for managing sysadmins, run</p> <pre><code>ckan -c /etc/ckan/default/ckan.ini sysadmin --help\n</code></pre>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#system-requirements","title":"System requirements","text":"<p>For a small to medium CKAN implementation, it is recommended the frontend (Web) and backend (db and solr) run on separate machines (Physical or VM's). The following is suggested as a minimum for each machine:</p> <ul> <li>2 CPU cores</li> <li>4 GB of RAM</li> <li>AMD64 (x86_64) architecture</li> <li>60 GB of disk space</li> </ul> <p>If you wish to run both frontend and backend on the same machine, you will almost certainly want to use 4(+) CPU cores.</p> <p>The (primary) CKAN server should have a public IP address and a domain name (e.g. <code>demo.ckan.org</code>). We will install a free SSL certificate for this domain using Let's Encrypt.</p>"},{"location":"installation/#package-installation","title":"Package installation","text":"<p>These instructions assume you are using Ubuntu 22.04 and do a package install, the quickest and easiest way to install CKAN. Other installation options are installation from source and installation using Docker.</p> <p>You should install CKAN from package if:</p> <ul> <li>You want to install CKAN on an Ubuntu 20.04 or 22.04, 64-bit server, and</li> <li>You only want to run one CKAN website per server</li> </ul> <p>Update Ubuntu's package index.</p> <pre><code>sudo apt update\n</code></pre> <p>Install the Ubuntu packages that CKAN requires (and <code>git</code>, to enable you to install CKAN extensions).</p> <pre><code>sudo apt install -y libpq5 redis-server nginx supervisor git\n</code></pre> <p>Download the CKAN package.</p> <pre><code>wget https://packaging.ckan.org/python-ckan_2.10-jammy_amd64.deb\n</code></pre> <p>Install the CKAN package.</p> <pre><code>sudo dpkg -i python-ckan_2.10-jammy_amd64.deb\n</code></pre>"},{"location":"installation/#install-and-configure-postgresql","title":"Install and configure PostgreSQL","text":"<p>!!! Tip     You can install PostgreSQL and CKAN on different servers. Just change the sqlalchemy.url setting in your <code>/etc/ckan/default/ckan.ini</code> file to reference your PostgreSQL server.</p> <p>Install PostgreSQL required packages.</p> <pre><code>sudo apt install -y postgresql\n</code></pre> <p>Next you\u2019ll need to create a database user if one doesn\u2019t already exist. Create a new PostgreSQL user called ckan_default, and enter a password for the user when prompted. You\u2019ll need this password later.</p> <pre><code>sudo -u postgres createuser -S -D -R -P ckan_default\n</code></pre> <p>Create a new PostgreSQL database, called ckan_default, owned by the database user you just created.</p> <pre><code>sudo -u postgres createdb -O ckan_default ckan_default -E utf-8\n</code></pre> <p>Edit the sqlalchemy.url option in your CKAN configuration file (<code>/etc/ckan/default/ckan.ini</code>) file and set the correct password, database and database user.</p> <pre><code>sudo nano /etc/ckan/default/ckan.ini\n</code></pre>"},{"location":"installation/#install-and-configure-solr","title":"Install and configure Solr","text":"<p>The following instructions have been tested in Ubuntu 22.04 and are provided as a guidance only. </p> <pre><code>sudo apt-get install openjdk-8-jdk\n</code></pre> <p>Download the latest supported version from the Solr downloads page. CKAN supports Solr version 8.x.</p> <pre><code>wget https://downloads.apache.org/lucene/solr/8.11.2/solr-8.11.2.tgz\n</code></pre> <p>Extract the install script file to your desired location.</p> <pre><code>tar xzf solr-8.11.2.tgz solr-8.11.2/bin/install_solr_service.sh --strip-components=2\n</code></pre> <p>Run the installation script.</p> <pre><code>sudo bash ./install_solr_service.sh solr-8.11.2.tgz\n</code></pre> <p>Create a new core for CKAN.</p> <pre><code>sudo -u solr /opt/solr/bin/solr create -c ckan\n</code></pre> <p>Replace the standard schema with the CKAN one.</p> <pre><code>sudo -u solr wget -O /var/solr/data/ckan/conf/managed-schema https://raw.githubusercontent.com/ckan/ckan/dev-v2.10/ckan/config/solr/schema.xml\n</code></pre> <p>Restart Solr.</p> <pre><code>sudo service solr restart\n</code></pre>"},{"location":"installation/#configure-the-web-server","title":"Configure the Web Server","text":"<p>Configure Nginx to serve your CKAN site. Edit the Nginx config file (/etc/nginx/sites-available/ckan) that was installed by the CKAN package and insert the <code>server_name</code> variable in the <code>server</code> block.</p> <pre><code>sudo nano /etc/nginx/sites-available/ckan\n</code></pre> <pre><code>server {\n  client_max_body_size 100M;\n  server_name demo.ckan.org;\n  location /\n...\n</code></pre> <p>Restart Nginx.</p> <pre><code>sudo service nginx restart\n</code></pre> <p>Configure the firewall to allow access to the CKAN web server via HTTP, HTTPS and SSH only.</p> <p>Allow access to the CKAN web server via HTTP and HTTPS.</p> <pre><code>sudo ufw allow 'Nginx Full'\n</code></pre> <p>Allow access to the CKAN web server via SSH.</p> <pre><code>sudo ufw allow ssh\n</code></pre> <p>Enable the firewall.</p> <pre><code>sudo ufw enable\n</code></pre> <p>Install a free SSL certificate for your domain using Let's Encrypt.</p> <pre><code>\n```bash o\n\nInstall certbot to obtain a free SSL certificate for Nginx on Ubuntu 22.04.\n\n```bash\nsudo snap install core; sudo snap refresh core\nsudo snap install --classic certbot\nsudo ln -s /snap/bin/certbot /usr/bin/certbot\n</code></pre> <p>Request a certificate for your domain. You will be prompted to enter an email address and agree to the terms of service. Certbot will automatically configure Nginx to use the certificate.</p> <pre><code>sudo certbot --nginx -d demo.ckan.org\n</code></pre>"},{"location":"installation/#set-up-a-writable-directory","title":"Set up a writable directory","text":"<p>CKAN needs a directory where it can write certain files, regardless of whether you are using the FileStore and file uploads or not (if you do want to enable file uploads, set the ckan.storage_path configuration option in the next section).</p> <p>Create the directory where CKAN will be able to write files.</p> <pre><code>sudo mkdir -p /var/lib/ckan/default\n</code></pre> <p>Set the permissions of this directory. If you\u2019re running CKAN with Nginx, then the Nginx\u2019s user (<code>www-data</code> on Ubuntu) must have read, write and execute permissions on it.</p> <pre><code>sudo chown www-data /var/lib/ckan/default\nsudo chmod u+rwx /var/lib/ckan/default\n</code></pre>"},{"location":"installation/#configure-ckan","title":"Configure CKAN","text":"<p>Edit the CKAN configuration file (/etc/ckan/default/ckan.ini) to set up the following options.</p> <pre><code>sudo nano /etc/ckan/default/ckan.ini\n</code></pre> <p>Each CKAN site should have a unique <code>site_id</code>, for example</p> <pre><code>ckan.site_id = default\n</code></pre> <p>Provide the site\u2019s URL. For example</p> <pre><code>ckan.site_url = http://demo.ckan.org\n</code></pre> <p>Initialize your CKAN database by running this command in a terminal.</p> <pre><code>sudo ckan db init\n</code></pre> <p>Reload the Supervisor daemon so the new processes are picked up</p> <pre><code>sudo supervisorctl reload\n</code></pre> <p>Restart the web server.</p> <pre><code>sudo service nginx restart\n</code></pre>"}]}